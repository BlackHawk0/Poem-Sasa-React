{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie.DESKTOP-ROU77NT\\\\Videos\\\\Poem-Sasa-React\\\\src\\\\components\\\\Poem.js\";\n// import { AiFillFileAdd } from 'react-icons/ai';\n// import { AiFillHeart } from 'react-icons/ai';\n// function Likee({ addToCollection, addToLiked, id,liked }) {\n//       return (\n//             <>\n//                   <div className='likes'>\n//                         <AiFillFileAdd\n//                               style={{ color: '#0b489c', fontSize: '2rem', cursor: 'pointer' }}\n//                               onClick={() => addToCollection(id)}\n//                         />\n//                         <AiFillHeart\n//                               style={{ color: `${ liked? 'red':'black'}`, fontSize: '2rem', cursor: 'pointer' }}\n//                               onClick={() => addToLiked(id)}\n//                         />\n//                   </div>\n//                   <div className='lk'>\n//                         <span>Add</span>\n//                         <span>Likes</span>\n//                   </div>\n//             </>\n//       )\n// }\n// function Poem({ poem, addToCollection, addToLiked,view=false ,liked}) {\n//       if (typeof poem.content !== \"string\") {\n//             return\n//       }\n//       const preview = poem.content.split(\"\\n\").slice(0, 6)\n//       return (\n//             <div className=\"poem\">\n// <div className=\"prev\">\n//       <h1>{poem.title}</h1>\n//       {preview.map((line, key) => (\n//             <p key={key}>{line}</p>\n//       ))}\n//       <p>...</p>\n//       <span\n//             style={{ fontStyle: 'italic', color: '#f1356d' }}\n//       >By {poem.poet.name}</span>\n// </div>\n//                   {!view ? <Likee addToCollection={addToCollection} addToLiked={addToLiked} id={poem.id} liked={liked}/> : null}\n//             </div>\n//       )\n// }\n// export default Poem;\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Poem(_ref) {\n  let {\n    poem\n  } = _ref;\n\n  if (typeof poem.content !== \"string\") {\n    return;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prev\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: poem.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), preview.map((line, key) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: line\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontStyle: 'italic',\n          color: '#f1356d'\n        },\n        children: [\"By \", poem.poet.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Poem;\nexport default Poem;\n\nvar _c;\n\n$RefreshReg$(_c, \"Poem\");","map":{"version":3,"names":["React","Poem","poem","content","title","preview","map","line","key","fontStyle","color","poet","name"],"sources":["C:/Users/danie.DESKTOP-ROU77NT/Videos/Poem-Sasa-React/src/components/Poem.js"],"sourcesContent":["// import { AiFillFileAdd } from 'react-icons/ai';\r\n// import { AiFillHeart } from 'react-icons/ai';\r\n\r\n\r\n// function Likee({ addToCollection, addToLiked, id,liked }) {\r\n//       return (\r\n//             <>\r\n//                   <div className='likes'>\r\n//                         <AiFillFileAdd\r\n//                               style={{ color: '#0b489c', fontSize: '2rem', cursor: 'pointer' }}\r\n//                               onClick={() => addToCollection(id)}\r\n\r\n//                         />\r\n//                         <AiFillHeart\r\n//                               style={{ color: `${ liked? 'red':'black'}`, fontSize: '2rem', cursor: 'pointer' }}\r\n//                               onClick={() => addToLiked(id)}\r\n//                         />\r\n\r\n\r\n//                   </div>\r\n//                   <div className='lk'>\r\n//                         <span>Add</span>\r\n//                         <span>Likes</span>\r\n//                   </div>\r\n//             </>\r\n//       )\r\n// }\r\n\r\n// function Poem({ poem, addToCollection, addToLiked,view=false ,liked}) {\r\n//       if (typeof poem.content !== \"string\") {\r\n//             return\r\n//       }\r\n\r\n//       const preview = poem.content.split(\"\\n\").slice(0, 6)\r\n\r\n//       return (\r\n//             <div className=\"poem\">\r\n                  // <div className=\"prev\">\r\n                  //       <h1>{poem.title}</h1>\r\n                  //       {preview.map((line, key) => (\r\n                  //             <p key={key}>{line}</p>\r\n                  //       ))}\r\n                  //       <p>...</p>\r\n                  //       <span\r\n                  //             style={{ fontStyle: 'italic', color: '#f1356d' }}\r\n                  //       >By {poem.poet.name}</span>\r\n                  // </div>\r\n//                   {!view ? <Likee addToCollection={addToCollection} addToLiked={addToLiked} id={poem.id} liked={liked}/> : null}\r\n//             </div>\r\n\r\n\r\n//       )\r\n// }\r\n// export default Poem;\r\n\r\n\r\nimport React from 'react'\r\n\r\nfunction Poem({poem}) {\r\n      if (typeof poem.content !== \"string\") {\r\n            return\r\n      }\r\n      \r\n  return (\r\n    <div>\r\n      <div className=\"prev\">\r\n            <h1>{poem.title}</h1>\r\n            {preview.map((line, key) => (\r\n                  <p key={key}>{line}</p>\r\n            ))}\r\n            <p>...</p>\r\n            <span\r\n                  style={{ fontStyle: 'italic', color: '#f1356d' }}\r\n            >By {poem.poet.name}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Poem"],"mappings":";AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACkB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAClB;AACA;AAGA;AACA;AACA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,IAAT,OAAsB;EAAA,IAAR;IAACC;EAAD,CAAQ;;EAChB,IAAI,OAAOA,IAAI,CAACC,OAAZ,KAAwB,QAA5B,EAAsC;IAChC;EACL;;EAEL,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,MAAf;MAAA,wBACM;QAAA,UAAKD,IAAI,CAACE;MAAV;QAAA;QAAA;QAAA;MAAA,QADN,EAEOC,OAAO,CAACC,GAAR,CAAY,CAACC,IAAD,EAAOC,GAAP,kBACP;QAAA,UAAcD;MAAd,GAAQC,GAAR;QAAA;QAAA;QAAA;MAAA,QADL,CAFP,eAKM;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALN,eAMM;QACM,KAAK,EAAE;UAAEC,SAAS,EAAE,QAAb;UAAuBC,KAAK,EAAE;QAA9B,CADb;QAAA,kBAEKR,IAAI,CAACS,IAAL,CAAUC,IAFf;MAAA;QAAA;QAAA;QAAA;MAAA,QANN;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAcD;;KAnBQX,I;AAqBT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}