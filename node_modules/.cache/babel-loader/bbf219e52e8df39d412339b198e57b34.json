{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie.DESKTOP-ROU77NT\\\\Videos\\\\Poem-Sasa-React\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport Nav from \"./components/Nav\";\nimport Home from './components/Home';\nimport Create from './components/Create';\nimport Collection from './components/Collection';\nimport Like from './components/Like';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [poems, setPoems] = useState([]);\n  const [likes, setLikes] = useState([]);\n  const [collection, setCollection] = useState([]);\n  const [user, setUser] = useState(localStorage.getItem('fuser') || null); // get poems\n\n  fetch(\"http://localhost:3000/poems\").then(res => res.json()).then(data => {\n    setPoems(data);\n  }, []); // const fetchLikes = async () => {\n  //   // const res = await fetch('https://shrouded-everglades-59715.herokuapp.com/users/' + user);\n  //   const res = await fetch('http://localhost:3000/users/' + user);\n  //   const data = await res.json();\n  //   if (data.likes) {\n  //     setLikes([...likes, ...data.liked])\n  //   }\n  // }\n  // // useCallback(fetchLikes,[likes]);\n  // useEffect(() => {\n  //   fetchLikes();\n  // }, []);\n  // const fetchCollection = async () => {\n  //   // const res = await fetch('https://shrouded-everglades-59715.herokuapp.com/users/' + user);\n  //   const res = await fetch('http://localhost:3000/users/' + user);\n  //   const data = await res.json();\n  //   if (data.collection) {\n  //     setCollection([...collection, ...data.collection])\n  //   }\n  // }\n  // // useCallback(fetchCollection,[collection]);\n  // useEffect(() => {\n  //   fetchCollection();\n  // }, []);\n  // useEffect(() => {\n  //   if (!user) {\n  //     let usr = Date.now();\n  //     localStorage.setItem('fuser', usr);\n  //     // fetch(\"https://shrouded-everglades-59715.herokuapp.com/users\", {\n  //     fetch(\"http://localhost:3000/users\", { \n  //       method: \"POST\",\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //       body: JSON.stringify({\n  //         id: usr,\n  //       }),\n  //     })\n  //       .then((res) => res.json())\n  //       .then((data) => {\n  //         console.log(data);\n  //       });\n  //     setUser(usr);\n  //   }\n  // }, []);\n  // function addToCollection(id) {\n  //   if (!collection.includes(id)) {\n  //     // fetch(`https://shrouded-everglades-59715.herokuapp.com/users/${user}`, {\n  //     fetch(`http://localhost:3000/users/${user}`, {\n  //       method: 'PATCH',\n  //       headers: {\n  //         'Content-Type': 'application/json'\n  //       },\n  //       body: JSON.stringify({\n  //         collection: [...collection, id]\n  //       })\n  //     })\n  //   }\n  // }\n  // function addToLiked(id) {\n  //   //patch to user where user = user\n  //   //add title to liked\n  //   console.log(id)\n  //   let totalLikes = likes;\n  //   if (likes.includes(id)) {\n  //     //unlike\n  //     totalLikes = likes.filter((item) => item !== id)\n  //   } else {\n  //     //like\n  //     totalLikes = [...likes, id]\n  //   }\n  //   // fetch(`https://shrouded-everglades-59715.herokuapp.com/users/${user}`, {\n  //   fetch(`http://localhost:3000/users/${user}`, {\n  //     method: 'PATCH',\n  //     headers: {\n  //       'Content-Type': 'application/json'\n  //     },\n  //     body: JSON.stringify({\n  //       liked: totalLikes\n  //     })\n  //   })\n  //     .then(res => res.json())\n  //     .then(() => {\n  //       setLikes(totalLikes)\n  //     })\n  // }\n  // function handleAdd(e) {\n  //   e.preventDefault();\n  //   const newPoem = {\n  //     title: e.target.title.value,\n  //     content: e.target.content.value,\n  //     poet: {\n  //       name: e.target.name.value,\n  //     }\n  //   }\n  //   // fetch(\"https://shrouded-everglades-59715.herokuapp.com/poems\", {\n  //   fetch(\"http://localhost:3000/poems\", {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify(newPoem),\n  //   })\n  //     .then((res) => res.json())\n  //     .then((data) => {\n  //       setPoems([...poems, data]);\n  //     });\n  // }\n  // console.log(likes)\n  // const likedPoems = poems.filter(poem => likes.includes(poem.id))\n  // const collectionPoems = poems.filter(poem => collection.includes(poem.id))\n  // console.log(likes)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {\n            poems: poems,\n            addToCollection: addToCollection,\n            addToLiked: addToLiked,\n            likes: likes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"RHZcNhELdrbYjvY5E7me9/sfg9c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Nav","Home","Create","Collection","Like","BrowserRouter","Route","Routes","App","poems","setPoems","likes","setLikes","collection","setCollection","user","setUser","localStorage","getItem","fetch","then","res","json","data","addToCollection","addToLiked"],"sources":["C:/Users/danie.DESKTOP-ROU77NT/Videos/Poem-Sasa-React/src/App.js"],"sourcesContent":["import './App.css';\r\nimport { useState, useEffect } from 'react';\r\nimport Nav from \"./components/Nav\";\r\nimport Home from './components/Home';\r\nimport Create from './components/Create';\r\nimport Collection from './components/Collection';\r\nimport Like from './components/Like';\r\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  const [poems, setPoems] = useState([]);\r\n\r\n  const [likes, setLikes] = useState([]);\r\n  const [collection, setCollection] = useState([]);\r\n\r\n\r\n\r\n  const [user, setUser] = useState(localStorage.getItem('fuser') || null);\r\n\r\n  // get poems\r\n  fetch(\"http://localhost:3000/poems\")\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      setPoems(data);\r\n\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // const fetchLikes = async () => {\r\n  //   // const res = await fetch('https://shrouded-everglades-59715.herokuapp.com/users/' + user);\r\n  //   const res = await fetch('http://localhost:3000/users/' + user);\r\n  //   const data = await res.json();\r\n  //   if (data.likes) {\r\n  //     setLikes([...likes, ...data.liked])\r\n  //   }\r\n\r\n  // }\r\n\r\n  // // useCallback(fetchLikes,[likes]);\r\n  // useEffect(() => {\r\n  //   fetchLikes();\r\n  // }, []);\r\n  // const fetchCollection = async () => {\r\n  //   // const res = await fetch('https://shrouded-everglades-59715.herokuapp.com/users/' + user);\r\n  //   const res = await fetch('http://localhost:3000/users/' + user);\r\n  //   const data = await res.json();\r\n  //   if (data.collection) {\r\n  //     setCollection([...collection, ...data.collection])\r\n  //   }\r\n\r\n\r\n  // }\r\n\r\n  // // useCallback(fetchCollection,[collection]);\r\n  // useEffect(() => {\r\n  //   fetchCollection();\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if (!user) {\r\n  //     let usr = Date.now();\r\n  //     localStorage.setItem('fuser', usr);\r\n  //     // fetch(\"https://shrouded-everglades-59715.herokuapp.com/users\", {\r\n  //     fetch(\"http://localhost:3000/users\", { \r\n  //       method: \"POST\",\r\n  //       headers: {\r\n  //         \"Content-Type\": \"application/json\",\r\n  //       },\r\n  //       body: JSON.stringify({\r\n  //         id: usr,\r\n  //       }),\r\n  //     })\r\n  //       .then((res) => res.json())\r\n  //       .then((data) => {\r\n  //         console.log(data);\r\n  //       });\r\n  //     setUser(usr);\r\n  //   }\r\n    \r\n\r\n\r\n  // }, []);\r\n  // function addToCollection(id) {\r\n  //   if (!collection.includes(id)) {\r\n  //     // fetch(`https://shrouded-everglades-59715.herokuapp.com/users/${user}`, {\r\n  //     fetch(`http://localhost:3000/users/${user}`, {\r\n  //       method: 'PATCH',\r\n  //       headers: {\r\n  //         'Content-Type': 'application/json'\r\n  //       },\r\n  //       body: JSON.stringify({\r\n  //         collection: [...collection, id]\r\n  //       })\r\n  //     })\r\n\r\n  //   }\r\n  // }\r\n\r\n  // function addToLiked(id) {\r\n  //   //patch to user where user = user\r\n  //   //add title to liked\r\n  //   console.log(id)\r\n  //   let totalLikes = likes;\r\n  //   if (likes.includes(id)) {\r\n  //     //unlike\r\n  //     totalLikes = likes.filter((item) => item !== id)\r\n  //   } else {\r\n  //     //like\r\n  //     totalLikes = [...likes, id]\r\n  //   }\r\n\r\n  //   // fetch(`https://shrouded-everglades-59715.herokuapp.com/users/${user}`, {\r\n  //   fetch(`http://localhost:3000/users/${user}`, {\r\n  //     method: 'PATCH',\r\n  //     headers: {\r\n  //       'Content-Type': 'application/json'\r\n  //     },\r\n  //     body: JSON.stringify({\r\n  //       liked: totalLikes\r\n  //     })\r\n  //   })\r\n  //     .then(res => res.json())\r\n  //     .then(() => {\r\n  //       setLikes(totalLikes)\r\n  //     })\r\n\r\n  // }\r\n  // function handleAdd(e) {\r\n  //   e.preventDefault();\r\n  //   const newPoem = {\r\n  //     title: e.target.title.value,\r\n  //     content: e.target.content.value,\r\n  //     poet: {\r\n  //       name: e.target.name.value,\r\n  //     }\r\n  //   }\r\n  //   // fetch(\"https://shrouded-everglades-59715.herokuapp.com/poems\", {\r\n  //   fetch(\"http://localhost:3000/poems\", {\r\n  //     method: \"POST\",\r\n  //     headers: {\r\n  //       \"Content-Type\": \"application/json\",\r\n  //     },\r\n  //     body: JSON.stringify(newPoem),\r\n  //   })\r\n  //     .then((res) => res.json())\r\n  //     .then((data) => {\r\n  //       setPoems([...poems, data]);\r\n  //     });\r\n  // }\r\n  // console.log(likes)\r\n  // const likedPoems = poems.filter(poem => likes.includes(poem.id))\r\n  // const collectionPoems = poems.filter(poem => collection.includes(poem.id))\r\n  // console.log(likes)\r\n\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <BrowserRouter>\r\n        <Nav />\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home poems={poems} addToCollection={addToCollection} addToLiked={addToLiked} likes={likes} />} />\r\n          {/* <Route path=\"/collection\" element={<Collection poems={collectionPoems} />} />\r\n          <Route path=\"/liked\" element={<Like poems={likedPoems} />} />\r\n          <Route path=\"/create\" element={<Create handleAdd={handleAdd} />} /> */}\r\n        </Routes>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,QAA6C,kBAA7C;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;EAEA,MAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACe,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,EAAD,CAA5C;EAIA,MAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAACmB,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,IAAlC,CAAhC,CARa,CAUb;;EACAC,KAAK,CAAC,6BAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAU;IACdb,QAAQ,CAACa,IAAD,CAAR;EAED,CALH,EAKK,EALL,EAXa,CAwBboBACE;IAAK,SAAS,EAAC,KAAf;IAAA,uBAEE,QAAC,aAAD;MAAA,wBACE,QAAC,GAAD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,MAAD;QAAA,uBACE,QAAC,KAAD;UAAO,IAAI,EAAC,GAAZ;UAAgB,OAAO,eAAE,QAAC,IAAD;YAAM,KAAK,EAAEd,KAAb;YAAoB,eAAe,EAAEe,eAArC;YAAsD,UAAU,EAAEC,UAAlE;YAA8E,KAAK,EAAEd;UAArF;YAAA;YAAA;YAAA;UAAA;QAAzB;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA;EAFF;IAAA;IAAA;IAAA;EAAA,QADF;AAcD;;GApKQH,G;;KAAAA,G;AAsKT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}