{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie.DESKTOP-ROU77NT\\\\Videos\\\\Poem-Sasa-React\\\\src\\\\components\\\\Poem.js\";\nimport { AiFillFileAdd } from 'react-icons/ai';\nimport { AiFillHeart } from 'react-icons/ai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Likee(_ref) {\n  let {\n    addToCollection,\n    addToLiked,\n    id,\n    liked\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"likes\",\n      children: [/*#__PURE__*/_jsxDEV(AiFillFileAdd, {\n        style: {\n          color: '#0b489c',\n          fontSize: '2rem',\n          cursor: 'pointer'\n        },\n        onClick: () => addToCollection(id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(AiFillHeart, {\n        style: {\n          color: `${liked ? 'red' : 'black'}`,\n          fontSize: '2rem',\n          cursor: 'pointer'\n        },\n        onClick: () => addToLiked(id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lk\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Likes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true);\n}\n\n_c = Likee;\n\nfunction Poem(_ref2) {\n  let {\n    poem,\n    addToCollection,\n    addToLiked,\n    view = false,\n    liked\n  } = _ref2;\n\n  if (typeof poem.content !== \"string\") {\n    return;\n  }\n\n  const preview = poem.content.split(\"\\n\").slice(0, 6);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"poem\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prev\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: poem.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }, this), preview.map((line, key) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: line\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 31\n      }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontStyle: 'italic',\n          color: '#f1356d'\n        },\n        children: [\"By \", poem.poet.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 19\n    }, this), !view ? /*#__PURE__*/_jsxDEV(Likee, {\n      addToCollection: addToCollection,\n      addToLiked: addToLiked,\n      id: poem.id,\n      liked: liked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 28\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 13\n  }, this);\n}\n\n_c2 = Poem;\nexport default Poem;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Likee\");\n$RefreshReg$(_c2, \"Poem\");","map":{"version":3,"names":["AiFillFileAdd","AiFillHeart","Likee","addToCollection","addToLiked","id","liked","color","fontSize","cursor","Poem","poem","view","content","preview","split","slice","title","map","line","key","fontStyle","poet","name"],"sources":["C:/Users/danie.DESKTOP-ROU77NT/Videos/Poem-Sasa-React/src/components/Poem.js"],"sourcesContent":["import { AiFillFileAdd } from 'react-icons/ai';\r\nimport { AiFillHeart } from 'react-icons/ai';\r\n\r\n\r\nfunction Likee({ addToCollection, addToLiked, id,liked }) {\r\n      return (\r\n            <>\r\n                  <div className='likes'>\r\n                        <AiFillFileAdd\r\n                              style={{ color: '#0b489c', fontSize: '2rem', cursor: 'pointer' }}\r\n                              onClick={() => addToCollection(id)}\r\n\r\n                        />\r\n                        <AiFillHeart\r\n                              style={{ color: `${ liked? 'red':'black'}`, fontSize: '2rem', cursor: 'pointer' }}\r\n                              onClick={() => addToLiked(id)}\r\n                        />\r\n\r\n\r\n                  </div>\r\n                  <div className='lk'>\r\n                        <span>Add</span>\r\n                        <span>Likes</span>\r\n                  </div>\r\n            </>\r\n      )\r\n}\r\n\r\nfunction Poem({ poem, addToCollection, addToLiked,view=false ,liked}) {\r\n      if (typeof poem.content !== \"string\") {\r\n            return\r\n      }\r\n\r\n      const preview = poem.content.split(\"\\n\").slice(0, 6)\r\n\r\n      return (\r\n            <div className=\"poem\">\r\n                  <div className=\"prev\">\r\n                        <h1>{poem.title}</h1>\r\n                        {preview.map((line, key) => (\r\n                              <p key={key}>{line}</p>\r\n                        ))}\r\n                        <p>...</p>\r\n                        <span\r\n                              style={{ fontStyle: 'italic', color: '#f1356d' }}\r\n                        >By {poem.poet.name}</span>\r\n                  </div>\r\n                  {!view ? <Likee addToCollection={addToCollection} addToLiked={addToLiked} id={poem.id} liked={liked}/> : null}\r\n            </div>\r\n\r\n\r\n      )\r\n}\r\nexport default Poem;\r\n"],"mappings":";AAAA,SAASA,aAAT,QAA8B,gBAA9B;AACA,SAASC,WAAT,QAA4B,gBAA5B;;;;AAGA,SAASC,KAAT,OAA0D;EAAA,IAA3C;IAAEC,eAAF;IAAmBC,UAAnB;IAA+BC,EAA/B;IAAkCC;EAAlC,CAA2C;EACpD,oBACM;IAAA,wBACM;MAAK,SAAS,EAAC,OAAf;MAAA,wBACM,QAAC,aAAD;QACM,KAAK,EAAE;UAAEC,KAAK,EAAE,SAAT;UAAoBC,QAAQ,EAAE,MAA9B;UAAsCC,MAAM,EAAE;QAA9C,CADb;QAEM,OAAO,EAAE,MAAMN,eAAe,CAACE,EAAD;MAFpC;QAAA;QAAA;QAAA;MAAA,QADN,eAMM,QAAC,WAAD;QACM,KAAK,EAAE;UAAEE,KAAK,EAAG,GAAGD,KAAK,GAAE,KAAF,GAAQ,OAAQ,EAAlC;UAAqCE,QAAQ,EAAE,MAA/C;UAAuDC,MAAM,EAAE;QAA/D,CADb;QAEM,OAAO,EAAE,MAAML,UAAU,CAACC,EAAD;MAF/B;QAAA;QAAA;QAAA;MAAA,QANN;IAAA;MAAA;MAAA;MAAA;IAAA,QADN,eAcM;MAAK,SAAS,EAAC,IAAf;MAAA,wBACM;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADN,eAEM;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFN;IAAA;MAAA;MAAA;MAAA;IAAA,QAdN;EAAA,gBADN;AAqBL;;KAtBQH,K;;AAwBT,SAASQ,IAAT,QAAsE;EAAA,IAAxD;IAAEC,IAAF;IAAQR,eAAR;IAAyBC,UAAzB;IAAoCQ,IAAI,GAAC,KAAzC;IAAgDN;EAAhD,CAAwD;;EAChE,IAAI,OAAOK,IAAI,CAACE,OAAZ,KAAwB,QAA5B,EAAsC;IAChC;EACL;;EAED,MAAMC,OAAO,GAAGH,IAAI,CAACE,OAAL,CAAaE,KAAb,CAAmB,IAAnB,EAAyBC,KAAzB,CAA+B,CAA/B,EAAkC,CAAlC,CAAhB;EAEA,oBACM;IAAK,SAAS,EAAC,MAAf;IAAA,wBACM;MAAK,SAAS,EAAC,MAAf;MAAA,wBACM;QAAA,UAAKL,IAAI,CAACM;MAAV;QAAA;QAAA;QAAA;MAAA,QADN,EAEOH,OAAO,CAACI,GAAR,CAAY,CAACC,IAAD,EAAOC,GAAP,kBACP;QAAA,UAAcD;MAAd,GAAQC,GAAR;QAAA;QAAA;QAAA;MAAA,QADL,CAFP,eAKM;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALN,eAMM;QACM,KAAK,EAAE;UAAEC,SAAS,EAAE,QAAb;UAAuBd,KAAK,EAAE;QAA9B,CADb;QAAA,kBAEKI,IAAI,CAACW,IAAL,CAAUC,IAFf;MAAA;QAAA;QAAA;QAAA;MAAA,QANN;IAAA;MAAA;MAAA;MAAA;IAAA,QADN,EAWO,CAACX,IAAD,gBAAQ,QAAC,KAAD;MAAO,eAAe,EAAET,eAAxB;MAAyC,UAAU,EAAEC,UAArD;MAAiE,EAAE,EAAEO,IAAI,CAACN,EAA1E;MAA8E,KAAK,EAAEC;IAArF;MAAA;MAAA;MAAA;IAAA,QAAR,GAAwG,IAX/G;EAAA;IAAA;IAAA;IAAA;EAAA,QADN;AAiBL;;MAxBQI,I;AAyBT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}